[build-system]
requires = ["setuptools>=77.0.3", "numpy", "scipy", "Cython>0.29"]
build-backend = "setuptools.build_meta"

[project]
name = "physics-tenpy"
dynamic = ["version"]
description = "Simulation of quantum many-body systems with tensor networks in Python"
readme = {file = "README.rst", content-type = "text/x-rst"}
license = "Apache-2.0"
license-files = ["LICENSE"]
requires-python = ">=3.8"
authors = [
    {name = "TeNPy Developer Team"},
]
maintainers = [
    {name = "Johannes Hauschild", email="tenpy@johannes-hauschild.de"},
    {name = "Jakob Unfried", email="jakob.unfried@tum.de"},
]
keywords = ["tensor networks", "matrix product states"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "numpy",
    "scipy",
]

[project.optional-dependencies]
plot = ["matplotlib"]
io = ["h5py", "pyyaml"]
memory = ["psutil"]
extra = ["bottleneck", "yapf==0.28.0", "docformatter==1.3.1"]
docbuild = [
    "Sphinx", 
    "sphinx-rtd-theme", 
    "sphinxcontrib-bibtex", 
    "matplotlib", 
    "ipykernel",
    "nbsphinx",
    "pandoc",
    "sphinx_copybutton",
]
test = ["pytest>=6.0", "physics_tenpy[io, memory]"]
all = ["physics_tenpy[plot, io, test, extra, docbuild]"]


[project.urls]
"Homepage" = "https://github.com/tenpy/tenpy"
"Documentation" = "https://tenpy.readthedocs.io/"
"Source" = "https://github.com/tenpy/tenpy"
"User Forum" = "https://tenpy.johannes-hauschild.de"
"Bug Tracker" = "https://github.com/tenpy/tenpy/issues"


[project.scripts]
tenpy-run = "tenpy:console_main"


[tool.setuptools.packages.find]
include = ['tenpy*']


[tool.setuptools.dynamic]
version = {attr = "tenpy.__version__"}


[tool.cibuildwheel]
# Disable building 32bit windows wheels (h5py does not support it)
# Disable musllinux : would need to install BLAS/LAPACK
# Disable free-threaded python 3.14 (h5py not yet supported), see issue 
skip = "*-win32 *-musllinux_* cp314t-*"
# Build separate wheels for macOS's different architectures.
macos.archs = ["x86_64", "arm64"]
# Build only on Linux architectures that don't need qemu emulation.
linux.archs = ["x86_64"]
# Run the test suite after each build.
test-requires = ["pytest>=6.0", "h5py", "pyyaml", "psutil"]
test-command = "pytest {project}/tests"


[tool.pytest.ini_options]
filterwarnings = [
    "error",  # consider all unfiltered warnings error. they should be handled or filtered.
    "ignore:Couldn't load compiled cython code. Code will run a bit slower.:UserWarning",
    "ignore::tenpy.BetaWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "example: marks tests as example (deselect with '-m \"not example\"')",
]
#{slow = "marks tests as slow (deselect with `-m 'not slow'`)"}
log_level = "INFO"
log_format = "%(asctime)s %(levelname)-8s %(filename)-16s%(lineno)4d: %(message)s"
testpaths = ["tests"]
