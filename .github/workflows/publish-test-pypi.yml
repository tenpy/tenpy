name: Build wheels and Upload Python Package to test.pypi

on:
  # on PR : TODO just for testing
  pull_request:

  # when a release is created
  release:
    types: [created]
  
  # when a tagged commit is pushed to *any* branch
  push:
    tags:
      - '**'  # on any tag

jobs:

  build-native-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.16.5
      with:
        output-dir: dist
      env:
          # Disable building PyPy wheels on all platforms
          # Disable building 32bit windows wheels (h5py does not support it)
          # Diable musllinux : would need to install BLAS/LAPACK
          CIBW_SKIP: pp* *-win32 *-musllinux_*
          # Build separate wheels for macOS's different architectures.
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          # Build only on Linux architectures that don't need qemu emulation.
          CIBW_ARCHS_LINUX: "x86_64"
          # Include latest Python beta.
          CIBW_PRERELEASE_PYTHONS: True
          # Run the test suite after each build.
          CIBW_TEST_REQUIRES: pytest>=0.6 numpy>=1.13 scipy>=0.18 bottleneck h5py pyyaml
          CIBW_TEST_COMMAND: pytest {project}/tests
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: dist/*.whl
  
  build-sdist-and-upload:
    runs-on: ubuntu-latest
    needs: 'build-native-wheels'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build twine
    
    - name: Download wheels from build artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist-wheels/
    
    - name: Build package
      run: |
        python -m build --sdist
        python -m twine check --strict dist/*
        python -m twine check --strict dist-wheels/*

    # - name: Publish wheels to PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.pypi_password }}
    #     packages-dir: dist-wheels/

    # - name: Publish sdist to PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.pypi_password }}

    - name: Publish wheels to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
        packages-dir: dist-wheels/

    - name: Publish sdist to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
  